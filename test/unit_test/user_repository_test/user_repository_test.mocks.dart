// Mocks generated by Mockito 5.4.4 from annotations
// in task/test/unit_test/user_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:task/app/data/models/user_model.dart' as _i3;
import 'package:task/app/data/services/remote/user_service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_1 extends _i1.SmartFake implements _i3.UserModel {
  _FakeUserModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_2<T extends Object?> extends _i1.SmartFake
    implements _i2.QuerySnapshot<T> {
  _FakeQuerySnapshot_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i4.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get collection => (super.noSuchMethod(
        Invocation.getter(#collection),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#collection),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  _i3.UserModel fromJson(Map<String, dynamic>? json) => (super.noSuchMethod(
        Invocation.method(
          #fromJson,
          [json],
        ),
        returnValue: _FakeUserModel_1(
          this,
          Invocation.method(
            #fromJson,
            [json],
          ),
        ),
      ) as _i3.UserModel);

  @override
  _i5.Future<_i3.UserModel?> getUserByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i5.Future<_i3.UserModel?>.value(),
      ) as _i5.Future<_i3.UserModel?>);

  @override
  _i5.Future<_i3.UserModel?> create(_i3.UserModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [model],
        ),
        returnValue: _i5.Future<_i3.UserModel?>.value(),
      ) as _i5.Future<_i3.UserModel?>);

  @override
  _i5.Future<void> deleteUserAndTasks(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserAndTasks,
          [userId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<List<_i3.UserModel>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i5.Future<List<_i3.UserModel>>.value(<_i3.UserModel>[]),
      ) as _i5.Future<List<_i3.UserModel>>);

  @override
  _i5.Future<_i3.UserModel?> fetchUserWithTasks(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserWithTasks,
          [userId],
        ),
        returnValue: _i5.Future<_i3.UserModel?>.value(),
      ) as _i5.Future<_i3.UserModel?>);

  @override
  _i5.Future<_i3.UserModel?> update(_i3.UserModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [model],
        ),
        returnValue: _i5.Future<_i3.UserModel?>.value(),
      ) as _i5.Future<_i3.UserModel?>);

  @override
  _i5.Future<bool> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<_i3.UserModel?> getById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i5.Future<_i3.UserModel?>.value(),
      ) as _i5.Future<_i3.UserModel?>);

  @override
  _i5.Future<_i2.QuerySnapshot<Object?>> query({
    List<String>? whereFields,
    List<dynamic>? whereValues,
    String? orderBy,
    bool? descending,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [],
          {
            #whereFields: whereFields,
            #whereValues: whereValues,
            #orderBy: orderBy,
            #descending: descending,
            #limit: limit,
          },
        ),
        returnValue: _i5.Future<_i2.QuerySnapshot<Object?>>.value(
            _FakeQuerySnapshot_2<Object?>(
          this,
          Invocation.method(
            #query,
            [],
            {
              #whereFields: whereFields,
              #whereValues: whereValues,
              #orderBy: orderBy,
              #descending: descending,
              #limit: limit,
            },
          ),
        )),
      ) as _i5.Future<_i2.QuerySnapshot<Object?>>);

  @override
  _i5.Future<void> batchDelete(List<String>? ids) => (super.noSuchMethod(
        Invocation.method(
          #batchDelete,
          [ids],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> batchUpdate(List<_i3.UserModel>? models) =>
      (super.noSuchMethod(
        Invocation.method(
          #batchUpdate,
          [models],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
